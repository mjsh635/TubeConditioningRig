/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ConditioningPackage;

import com.sun.jdi.request.BreakpointRequest;
import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.HashSet;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.WindowConstants;



/**
 *
 * @author mjsh6
 */
public class SupplyScreen extends javax.swing.JFrame {

    /**
     * Creates new form SupplyScreen
     */
    String IPAddress;
    String settingsFilePath;
    String LogFolderPath;
    String Name;
    LoggingController log;
    int port;
    DXM supply;
    Warmup_Handler warmup;
    boolean startRead = false;
    SettingsHandler sh;
    ConditioningHandler ch;
    String SerialNumber = "";
    AutoReadOutHandler AROH;
    PopOutHandler xrayOnOffPop;
    
    
    
    public SupplyScreen(String Name,String IPAddress,String port,String SettingsFilePath, String LogFolderPath) {
        initComponents();
        this.Name = Name;
        this.IPAddress = IPAddress;
        if(SettingsFilePath != ""){
            this.sh = new SettingsHandler(SettingsFilePath);
            Load_Settings();}
        this.LogFolderPath = LogFolderPath;
        log = new LoggingController(this.LogFolderPath);
        this.port = Integer.valueOf(port);
        this.supply = new DXM(this.IPAddress,this.port);
        
        this.warmup = new Warmup_Handler(this.supply, this.WarmupSelectionButtonGroup, this.WarmUpProgressBar,
                this.WarmVoltageTBox,this.WarmCurrentTBox,this.FillCurrTBox,this.PreHeatTBox, log,this.WarmupXrayStayOnCheckBox.isSelected());
        this.AROH = new AutoReadOutHandler(this.supply, this.VoltageReadoutLabel, 
                this.CurrentReadoutLabel, this.ConditionVoltageReadTBox, 
                this.ConditionCurrentReadTBox, this.ConditionFillamentReadTBox);
        this.AROH.start();
        if(!this.supply.connected){
            this.XrayOnButton.setEnabled(false);
            this.StartWarmupButton.setEnabled(false);
            this.StartConditioningButton.setEnabled(false);
            this.StopConditioningButton.setEnabled(false);
        }
        
        xrayOnOffPop = new PopOutHandler(Name,XrayOnOffPanel,ManualControlPanel);
    }
   
    
    public SupplyScreen(){
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WarmupSelectionButtonGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        ManualControlPanel = new javax.swing.JPanel();
        XrayOnOffPanel = new javax.swing.JPanel();
        XrayOnButton = new javax.swing.JButton();
        XrayOffButton = new javax.swing.JButton();
        VoltageLabel = new javax.swing.JLabel();
        CurrentLabel = new javax.swing.JLabel();
        VoltageSetTBox = new javax.swing.JTextField();
        CurrentSetTBox = new javax.swing.JTextField();
        kvLabel = new javax.swing.JLabel();
        maLabel = new javax.swing.JLabel();
        TitleLabel = new javax.swing.JLabel();
        VoltageReadoutLabel = new javax.swing.JLabel();
        CurrentReadoutLabel = new javax.swing.JLabel();
        XrayOnOffPanelPopButton = new javax.swing.JButton();
        WarmupPanel = new javax.swing.JPanel();
        WarmupTitleLabel = new javax.swing.JLabel();
        RadioButton7min = new javax.swing.JRadioButton();
        RadioButton15min = new javax.swing.JRadioButton();
        StartWarmupButton = new javax.swing.JButton();
        StopWarmupButton = new javax.swing.JButton();
        WarmUpProgressBar = new javax.swing.JProgressBar();
        WarmKVLabel = new javax.swing.JLabel();
        WarmVoltageTBox = new javax.swing.JTextField();
        WarmMALabel = new javax.swing.JLabel();
        WarmCurrentTBox = new javax.swing.JTextField();
        WarmMinKVLabel = new javax.swing.JLabel();
        WarmMinVoltageTBox = new javax.swing.JTextField();
        WarmMinMALabel = new javax.swing.JLabel();
        WarmMinCurrentTBox = new javax.swing.JTextField();
        WarmupXrayStayOnCheckBox = new javax.swing.JCheckBox();
        TubeSerialNumberTBox = new javax.swing.JTextField();
        TubeSerialNumberLabel = new javax.swing.JLabel();
        TubeConditioningPanel = new javax.swing.JPanel();
        ConditioningSettingsPanel = new javax.swing.JPanel();
        StartingMALabel = new javax.swing.JLabel();
        StartingMATBox = new javax.swing.JTextField();
        TotalStepCountTBox = new javax.swing.JTextField();
        TimeBetweenStepsTBox = new javax.swing.JTextField();
        TotalStepCountLabel = new javax.swing.JLabel();
        TimeBetweenStepsLabel = new javax.swing.JLabel();
        StartingKVTBox = new javax.swing.JTextField();
        StartingKVLabel = new javax.swing.JLabel();
        TargetKVTBox = new javax.swing.JTextField();
        TargetKVLabel = new javax.swing.JLabel();
        OnOffCycleTimeOnLabel = new javax.swing.JLabel();
        NumberOfOnOffCyclesTBox = new javax.swing.JTextField();
        TargetMATBox = new javax.swing.JTextField();
        TargetMALabel = new javax.swing.JLabel();
        OnOffCycleTimeOffTBox = new javax.swing.JTextField();
        OnOffCycleTimeOffLabel = new javax.swing.JLabel();
        NumberOfOnOffCyclesLabel = new javax.swing.JLabel();
        OnOffCycleTimeOnTBox = new javax.swing.JTextField();
        ConcurrentArcsBeforeStopLabel = new javax.swing.JLabel();
        ConcurrentArcsBeforeStopTBox = new javax.swing.JTextField();
        ArcRecoveryTimeTBox = new javax.swing.JTextField();
        ArcRecoveryTimeLabel = new javax.swing.JLabel();
        PreHeatLabel = new javax.swing.JLabel();
        PreHeatTBox = new javax.swing.JTextField();
        FilCurrLabel = new javax.swing.JLabel();
        FillCurrTBox = new javax.swing.JTextField();
        LaodDefaultButton = new javax.swing.JButton();
        PerformKVRampCheckBox = new javax.swing.JCheckBox();
        PerformMARampCheckBox = new javax.swing.JCheckBox();
        PerformKVRerampCheckBox = new javax.swing.JCheckBox();
        PerformOnOffCyclesCheckBox = new javax.swing.JCheckBox();
        TotalArcsBeforeStopLabel = new javax.swing.JLabel();
        TotalArcsBeforeStopTBox1 = new javax.swing.JTextField();
        NumberOfConditioningCyclesLabel = new javax.swing.JLabel();
        NumberOfConditioningCyclesTBox = new javax.swing.JTextField();
        ConditioningControlPanel = new javax.swing.JPanel();
        StartConditioningButton = new javax.swing.JButton();
        StopConditioningButton = new javax.swing.JButton();
        ConditioningProgressBar = new javax.swing.JProgressBar();
        ProgressBarLabel = new javax.swing.JLabel();
        TimeRemainingLabel = new javax.swing.JLabel();
        ConditionVoltageReadTBox = new javax.swing.JTextField();
        ConditionVoltageReadLabel = new javax.swing.JLabel();
        ConditionCurrentReadTBox = new javax.swing.JTextField();
        ConditionCurrentReadLabel = new javax.swing.JLabel();
        ConditionFillamentReadTBox = new javax.swing.JTextField();
        ConditionFillamentReadLabl = new javax.swing.JLabel();
        AboutPanel = new javax.swing.JPanel();
        ReconnectToSupplyButton = new javax.swing.JButton();
        AboutRefreshButton = new javax.swing.JButton();
        AboutIPAddressTBox = new javax.swing.JTextField();
        AboutIPAddressLabal = new javax.swing.JLabel();
        AboutPortLabal = new javax.swing.JLabel();
        AboutPortTBox = new javax.swing.JTextField();
        AboutSupplyModelLabel = new javax.swing.JLabel();
        AboutSupplyModelTBox = new javax.swing.JTextField();
        AboutArcLabel = new javax.swing.JLabel();
        AboutArcTBox = new javax.swing.JTextField();
        AboutFaultsLabel = new javax.swing.JLabel();
        AboutOverTempTBox = new javax.swing.JTextField();
        AboutOverTempLabel = new javax.swing.JLabel();
        AboutOverVoltageTBox = new javax.swing.JTextField();
        AboutOverVoltageLabel = new javax.swing.JLabel();
        AboutUnderVoltageTBox = new javax.swing.JTextField();
        AboutUnderVoltageLabel = new javax.swing.JLabel();
        AboutOverCurrentTBox = new javax.swing.JTextField();
        AboutOverCurrentLabel = new javax.swing.JLabel();
        AboutUnderCurrentTBox = new javax.swing.JTextField();
        AboutUnderCurrentLabel = new javax.swing.JLabel();
        AboutStatusesLabel = new javax.swing.JLabel();
        AboutHighVoltageLabel = new javax.swing.JLabel();
        AboutHighVoltageTBox = new javax.swing.JTextField();
        AboutInterlockLabel = new javax.swing.JLabel();
        AboutInterlockTBox = new javax.swing.JTextField();
        AboutFaultLabel = new javax.swing.JLabel();
        AboutFaultTBox = new javax.swing.JTextField();
        AboutRemoteLocalLabel = new javax.swing.JLabel();
        AboutRemoteLocalTBox = new javax.swing.JTextField();
        AboutMaxKVLabel = new javax.swing.JLabel();
        AboutMaxKVTBox = new javax.swing.JTextField();
        AboutMaxMALabel = new javax.swing.JLabel();
        AboutMaxMATBox = new javax.swing.JTextField();
        AboutMaxWLabel = new javax.swing.JLabel();
        AboutMaxWTBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Supply Screen");

        XrayOnOffPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        XrayOnOffPanel.setPreferredSize(new java.awt.Dimension(344, 300));

        XrayOnButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        XrayOnButton.setText("XRAY ON");
        XrayOnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XrayOnButtonActionPerformed(evt);
            }
        });

        XrayOffButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        XrayOffButton.setText("XRAY OFF");
        XrayOffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XrayOffButtonActionPerformed(evt);
            }
        });

        VoltageLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        VoltageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VoltageLabel.setText("VOLTAGE(kV)");

        CurrentLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CurrentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CurrentLabel.setText("CURRENT(mA)");

        VoltageSetTBox.setText("0.0");

        CurrentSetTBox.setText("0.0");
        CurrentSetTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrentSetTBoxActionPerformed(evt);
            }
        });

        kvLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        kvLabel.setText("kV");

        maLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        maLabel.setText("mA");

        TitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setText("Manual Xray Control");

        VoltageReadoutLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        VoltageReadoutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VoltageReadoutLabel.setText("0.0");

        CurrentReadoutLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        CurrentReadoutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CurrentReadoutLabel.setText("0.0");

        XrayOnOffPanelPopButton.setToolTipText("POP");
        XrayOnOffPanelPopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XrayOnOffPanelPopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout XrayOnOffPanelLayout = new javax.swing.GroupLayout(XrayOnOffPanel);
        XrayOnOffPanel.setLayout(XrayOnOffPanelLayout);
        XrayOnOffPanelLayout.setHorizontalGroup(
            XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                .addGroup(XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(VoltageReadoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CurrentReadoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                                .addComponent(kvLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(VoltageSetTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(maLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CurrentSetTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                                .addComponent(XrayOnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(XrayOffButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                                .addComponent(VoltageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CurrentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(XrayOnOffPanelPopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        XrayOnOffPanelLayout.setVerticalGroup(
            XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                .addGroup(XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(XrayOnOffPanelLayout.createSequentialGroup()
                        .addComponent(TitleLabel)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, XrayOnOffPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(XrayOnOffPanelPopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addGroup(XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VoltageLabel)
                    .addComponent(CurrentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CurrentReadoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VoltageReadoutLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(XrayOffButton, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                    .addComponent(XrayOnButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(XrayOnOffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VoltageSetTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CurrentSetTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kvLabel)
                    .addComponent(maLabel))
                .addGap(23, 23, 23))
        );

        WarmupPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        WarmupTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        WarmupTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WarmupTitleLabel.setText("Warm up");

        WarmupSelectionButtonGroup.add(RadioButton7min);
        RadioButton7min.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RadioButton7min.setSelected(true);
        RadioButton7min.setText("7-min");

        WarmupSelectionButtonGroup.add(RadioButton15min);
        RadioButton15min.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RadioButton15min.setText("15-min");

        StartWarmupButton.setText("Start Warmup");
        StartWarmupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartWarmupButtonActionPerformed(evt);
            }
        });

        StopWarmupButton.setText("Stop Warmup");
        StopWarmupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopWarmupButtonActionPerformed(evt);
            }
        });

        WarmKVLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        WarmKVLabel.setText("kV");

        WarmVoltageTBox.setText("0.0");
        WarmVoltageTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WarmVoltageTBoxActionPerformed(evt);
            }
        });

        WarmMALabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        WarmMALabel.setText("mA");

        WarmCurrentTBox.setText("0.0");
        WarmCurrentTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WarmCurrentTBoxActionPerformed(evt);
            }
        });

        WarmMinKVLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        WarmMinKVLabel.setText("Min kV");

        WarmMinVoltageTBox.setText("0.0");
        WarmMinVoltageTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WarmMinVoltageTBoxActionPerformed(evt);
            }
        });

        WarmMinMALabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        WarmMinMALabel.setText("Min mA");

        WarmMinCurrentTBox.setText("0.0");
        WarmMinCurrentTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WarmMinCurrentTBoxActionPerformed(evt);
            }
        });

        WarmupXrayStayOnCheckBox.setText("Keep X-ray on after Warmup");

        javax.swing.GroupLayout WarmupPanelLayout = new javax.swing.GroupLayout(WarmupPanel);
        WarmupPanel.setLayout(WarmupPanelLayout);
        WarmupPanelLayout.setHorizontalGroup(
            WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WarmupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WarmupPanelLayout.createSequentialGroup()
                        .addComponent(WarmupXrayStayOnCheckBox)
                        .addGap(57, 57, 57))
                    .addComponent(WarmupTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(WarmUpProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(WarmupPanelLayout.createSequentialGroup()
                        .addComponent(StartWarmupButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(StopWarmupButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WarmupPanelLayout.createSequentialGroup()
                        .addGroup(WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(WarmupPanelLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(RadioButton7min, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                            .addGroup(WarmupPanelLayout.createSequentialGroup()
                                .addComponent(WarmKVLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(WarmVoltageTBox)))
                        .addGap(18, 18, 18)
                        .addGroup(WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(WarmupPanelLayout.createSequentialGroup()
                                .addComponent(RadioButton15min, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(14, 14, 14))
                            .addGroup(WarmupPanelLayout.createSequentialGroup()
                                .addComponent(WarmMALabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(WarmCurrentTBox))))
                    .addGroup(WarmupPanelLayout.createSequentialGroup()
                        .addComponent(WarmMinKVLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WarmMinVoltageTBox)
                        .addGap(18, 18, 18)
                        .addComponent(WarmMinMALabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WarmMinCurrentTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        WarmupPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {RadioButton15min, RadioButton7min});

        WarmupPanelLayout.setVerticalGroup(
            WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WarmupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WarmupTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RadioButton7min)
                    .addComponent(RadioButton15min))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WarmVoltageTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WarmCurrentTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WarmKVLabel)
                    .addComponent(WarmMALabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(WarmMinCurrentTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(WarmMinMALabel)
                        .addComponent(WarmMinVoltageTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(WarmMinKVLabel))
                .addGap(17, 17, 17)
                .addComponent(WarmupXrayStayOnCheckBox)
                .addGap(18, 18, 18)
                .addGroup(WarmupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartWarmupButton)
                    .addComponent(StopWarmupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WarmUpProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        WarmupPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {StartWarmupButton, StopWarmupButton});

        TubeSerialNumberTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TubeSerialNumberTBoxMouseClicked(evt);
            }
        });
        TubeSerialNumberTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TubeSerialNumberTBoxActionPerformed(evt);
            }
        });

        TubeSerialNumberLabel.setText("Enter Tube Number:");

        javax.swing.GroupLayout ManualControlPanelLayout = new javax.swing.GroupLayout(ManualControlPanel);
        ManualControlPanel.setLayout(ManualControlPanelLayout);
        ManualControlPanelLayout.setHorizontalGroup(
            ManualControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManualControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ManualControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManualControlPanelLayout.createSequentialGroup()
                        .addComponent(WarmupPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(XrayOnOffPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ManualControlPanelLayout.createSequentialGroup()
                        .addComponent(TubeSerialNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TubeSerialNumberTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        ManualControlPanelLayout.setVerticalGroup(
            ManualControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManualControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ManualControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(WarmupPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(XrayOnOffPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(ManualControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TubeSerialNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TubeSerialNumberTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manual Control", ManualControlPanel);

        ConditioningSettingsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        StartingMALabel.setText("Starting mA:");

        StartingMATBox.setText("0.0");
        StartingMATBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartingMATBoxMouseClicked(evt);
            }
        });
        StartingMATBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartingMATBoxActionPerformed(evt);
            }
        });

        TotalStepCountTBox.setText("0.0");
        TotalStepCountTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TotalStepCountTBoxMouseClicked(evt);
            }
        });
        TotalStepCountTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalStepCountTBoxActionPerformed(evt);
            }
        });

        TimeBetweenStepsTBox.setText("0.0");
        TimeBetweenStepsTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TimeBetweenStepsTBoxMouseClicked(evt);
            }
        });
        TimeBetweenStepsTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeBetweenStepsTBoxActionPerformed(evt);
            }
        });

        TotalStepCountLabel.setText("Total Step Count:");

        TimeBetweenStepsLabel.setText("Time Between Steps(min):");

        StartingKVTBox.setText("0.0");
        StartingKVTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartingKVTBoxMouseClicked(evt);
            }
        });
        StartingKVTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartingKVTBoxActionPerformed(evt);
            }
        });

        StartingKVLabel.setText("Starting kV:");

        TargetKVTBox.setText("0.0");
        TargetKVTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TargetKVTBoxMouseClicked(evt);
            }
        });
        TargetKVTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TargetKVTBoxActionPerformed(evt);
            }
        });

        TargetKVLabel.setText("Target kV:");

        OnOffCycleTimeOnLabel.setText("On/Off Cycle Time On(min):");

        NumberOfOnOffCyclesTBox.setText("0.0");
        NumberOfOnOffCyclesTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NumberOfOnOffCyclesTBoxMouseClicked(evt);
            }
        });
        NumberOfOnOffCyclesTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberOfOnOffCyclesTBoxActionPerformed(evt);
            }
        });

        TargetMATBox.setText("0.0");
        TargetMATBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TargetMATBoxMouseClicked(evt);
            }
        });
        TargetMATBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TargetMATBoxActionPerformed(evt);
            }
        });

        TargetMALabel.setText("Target mA:");

        OnOffCycleTimeOffTBox.setText("0.0");
        OnOffCycleTimeOffTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OnOffCycleTimeOffTBoxMouseClicked(evt);
            }
        });
        OnOffCycleTimeOffTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnOffCycleTimeOffTBoxActionPerformed(evt);
            }
        });

        OnOffCycleTimeOffLabel.setText("On/Off Cycle Time Off(min):");

        NumberOfOnOffCyclesLabel.setText("Number of On /Off Cycles:");

        OnOffCycleTimeOnTBox.setText("0.0");
        OnOffCycleTimeOnTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OnOffCycleTimeOnTBoxMouseClicked(evt);
            }
        });
        OnOffCycleTimeOnTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnOffCycleTimeOnTBoxActionPerformed(evt);
            }
        });

        ConcurrentArcsBeforeStopLabel.setText("Concurrent Arcs Before Stop:");

        ConcurrentArcsBeforeStopTBox.setText("0.0");
        ConcurrentArcsBeforeStopTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConcurrentArcsBeforeStopTBoxMouseClicked(evt);
            }
        });
        ConcurrentArcsBeforeStopTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConcurrentArcsBeforeStopTBoxActionPerformed(evt);
            }
        });

        ArcRecoveryTimeTBox.setText("0.0");
        ArcRecoveryTimeTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ArcRecoveryTimeTBoxMouseClicked(evt);
            }
        });
        ArcRecoveryTimeTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArcRecoveryTimeTBoxActionPerformed(evt);
            }
        });

        ArcRecoveryTimeLabel.setText("Arc Recovery Time(min):");

        PreHeatLabel.setText("Filament Pre-heat: ");

        PreHeatTBox.setText("0.0");
        PreHeatTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PreHeatTBoxMouseClicked(evt);
            }
        });
        PreHeatTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreHeatTBoxActionPerformed(evt);
            }
        });

        FilCurrLabel.setText("Filament Current Limit: ");

        FillCurrTBox.setText("0.0");
        FillCurrTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FillCurrTBoxMouseClicked(evt);
            }
        });
        FillCurrTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FillCurrTBoxActionPerformed(evt);
            }
        });

        LaodDefaultButton.setText("Load Default");
        LaodDefaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaodDefaultButtonActionPerformed(evt);
            }
        });

        PerformKVRampCheckBox.setSelected(true);
        PerformKVRampCheckBox.setText("Perform KV Ramp (1)");
        PerformKVRampCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerformKVRampCheckBoxActionPerformed(evt);
            }
        });

        PerformMARampCheckBox.setSelected(true);
        PerformMARampCheckBox.setText("Perform MA Ramp (2)");
        PerformMARampCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerformMARampCheckBoxActionPerformed(evt);
            }
        });

        PerformKVRerampCheckBox.setSelected(true);
        PerformKVRerampCheckBox.setText("Perform KV Re-ramp (3)");
        PerformKVRerampCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerformKVRerampCheckBoxActionPerformed(evt);
            }
        });

        PerformOnOffCyclesCheckBox.setSelected(true);
        PerformOnOffCyclesCheckBox.setText("Perform On/Off Cycles (4)");
        PerformOnOffCyclesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerformOnOffCyclesCheckBoxActionPerformed(evt);
            }
        });

        TotalArcsBeforeStopLabel.setText("Total Arcs Before Stop:");

        TotalArcsBeforeStopTBox1.setText("0.0");
        TotalArcsBeforeStopTBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TotalArcsBeforeStopTBox1MouseClicked(evt);
            }
        });
        TotalArcsBeforeStopTBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalArcsBeforeStopTBox1ActionPerformed(evt);
            }
        });

        NumberOfConditioningCyclesLabel.setText("Number of Conditioning Cycles:");

        NumberOfConditioningCyclesTBox.setText("0.0");
        NumberOfConditioningCyclesTBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NumberOfConditioningCyclesTBoxMouseClicked(evt);
            }
        });
        NumberOfConditioningCyclesTBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberOfConditioningCyclesTBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConditioningSettingsPanelLayout = new javax.swing.GroupLayout(ConditioningSettingsPanel);
        ConditioningSettingsPanel.setLayout(ConditioningSettingsPanelLayout);
        ConditioningSettingsPanelLayout.setHorizontalGroup(
            ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(NumberOfOnOffCyclesLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(OnOffCycleTimeOffLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(OnOffCycleTimeOnLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(TargetMALabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(StartingMALabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TargetKVLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(StartingKVLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TimeBetweenStepsLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TotalStepCountLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StartingMATBox)
                            .addComponent(TargetKVTBox)
                            .addComponent(StartingKVTBox)
                            .addComponent(TimeBetweenStepsTBox)
                            .addComponent(TotalStepCountTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                                .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConditioningSettingsPanelLayout.createSequentialGroup()
                                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(FilCurrLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(PreHeatLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(ArcRecoveryTimeLabel)
                                        .addGap(23, 23, 23)))
                                .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                                        .addComponent(ArcRecoveryTimeTBox)
                                        .addGap(1, 1, 1))
                                    .addComponent(PreHeatTBox, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FillCurrTBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TotalArcsBeforeStopLabel)
                                    .addComponent(ConcurrentArcsBeforeStopLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TotalArcsBeforeStopTBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ConcurrentArcsBeforeStopTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(OnOffCycleTimeOffTBox)
                            .addComponent(OnOffCycleTimeOnTBox)
                            .addComponent(NumberOfOnOffCyclesTBox)
                            .addComponent(TargetMATBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NumberOfConditioningCyclesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NumberOfConditioningCyclesTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PerformKVRampCheckBox)
                            .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PerformOnOffCyclesCheckBox, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(PerformKVRerampCheckBox)
                                .addComponent(PerformMARampCheckBox))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConditioningSettingsPanelLayout.createSequentialGroup()
                        .addComponent(LaodDefaultButton)
                        .addGap(13, 13, 13)))
                .addContainerGap())
        );
        ConditioningSettingsPanelLayout.setVerticalGroup(
            ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConditioningSettingsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PerformKVRampCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PerformMARampCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PerformKVRerampCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PerformOnOffCyclesCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
            .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TotalStepCountTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalStepCountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TimeBetweenStepsTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TimeBetweenStepsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StartingKVTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StartingKVLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TargetKVTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TargetKVLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StartingMATBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StartingMALabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TargetMATBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TargetMALabel))
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NumberOfOnOffCyclesTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NumberOfOnOffCyclesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OnOffCycleTimeOnTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OnOffCycleTimeOnLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OnOffCycleTimeOffTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OnOffCycleTimeOffLabel)
                            .addComponent(LaodDefaultButton)))
                    .addGroup(ConditioningSettingsPanelLayout.createSequentialGroup()
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConcurrentArcsBeforeStopTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConcurrentArcsBeforeStopLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TotalArcsBeforeStopTBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalArcsBeforeStopLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ArcRecoveryTimeTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ArcRecoveryTimeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FillCurrTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FilCurrLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PreHeatTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PreHeatLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NumberOfConditioningCyclesTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NumberOfConditioningCyclesLabel))))
                .addGap(10, 10, 10))
        );

        ConditioningControlPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        StartConditioningButton.setText("Start Conditioning");
        StartConditioningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartConditioningButtonActionPerformed(evt);
            }
        });

        StopConditioningButton.setText("Stop Conditioning");
        StopConditioningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopConditioningButtonActionPerformed(evt);
            }
        });

        ProgressBarLabel.setText("Progress:");

        TimeRemainingLabel.setText("0.0 min");

        ConditionVoltageReadTBox.setEditable(false);
        ConditionVoltageReadTBox.setText("0.0");

        ConditionVoltageReadLabel.setText("Read Voltage:");

        ConditionCurrentReadTBox.setEditable(false);
        ConditionCurrentReadTBox.setText("0.0");

        ConditionCurrentReadLabel.setText("Read Current:");

        ConditionFillamentReadTBox.setEditable(false);
        ConditionFillamentReadTBox.setText("0.0");

        ConditionFillamentReadLabl.setText("Read Fillament Current:");

        javax.swing.GroupLayout ConditioningControlPanelLayout = new javax.swing.GroupLayout(ConditioningControlPanel);
        ConditioningControlPanel.setLayout(ConditioningControlPanelLayout);
        ConditioningControlPanelLayout.setHorizontalGroup(
            ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConditioningControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConditioningControlPanelLayout.createSequentialGroup()
                        .addComponent(ProgressBarLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ConditioningProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TimeRemainingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ConditioningControlPanelLayout.createSequentialGroup()
                        .addComponent(StartConditioningButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StopConditioningButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConditionFillamentReadLabl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ConditionVoltageReadLabel)
                                .addComponent(ConditionCurrentReadLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ConditionFillamentReadTBox)
                            .addComponent(ConditionCurrentReadTBox)
                            .addComponent(ConditionVoltageReadTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        ConditioningControlPanelLayout.setVerticalGroup(
            ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConditioningControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TimeRemainingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConditioningProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProgressBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConditioningControlPanelLayout.createSequentialGroup()
                        .addGap(18, 20, Short.MAX_VALUE)
                        .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StopConditioningButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StartConditioningButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(ConditioningControlPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConditionVoltageReadTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConditionVoltageReadLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConditionCurrentReadTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConditionCurrentReadLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConditioningControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConditionFillamentReadTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConditionFillamentReadLabl))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout TubeConditioningPanelLayout = new javax.swing.GroupLayout(TubeConditioningPanel);
        TubeConditioningPanel.setLayout(TubeConditioningPanelLayout);
        TubeConditioningPanelLayout.setHorizontalGroup(
            TubeConditioningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TubeConditioningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TubeConditioningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConditioningSettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConditioningControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        TubeConditioningPanelLayout.setVerticalGroup(
            TubeConditioningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TubeConditioningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ConditioningSettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConditioningControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tube Conditioning", TubeConditioningPanel);

        ReconnectToSupplyButton.setText("Reconnect To Supply");
        ReconnectToSupplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReconnectToSupplyButtonActionPerformed(evt);
            }
        });

        AboutRefreshButton.setText("Refresh");
        AboutRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutRefreshButtonActionPerformed(evt);
            }
        });

        AboutIPAddressTBox.setEditable(false);
        AboutIPAddressTBox.setText("N/A");

        AboutIPAddressLabal.setText("IP Address:");

        AboutPortLabal.setText("Port:");

        AboutPortTBox.setEditable(false);
        AboutPortTBox.setText("N/A");

        AboutSupplyModelLabel.setText("Supply Model:");

        AboutSupplyModelTBox.setEditable(false);
        AboutSupplyModelTBox.setText("N/A");

        AboutArcLabel.setText("Arc:");

        AboutArcTBox.setEditable(false);
        AboutArcTBox.setText("N/A");

        AboutFaultsLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AboutFaultsLabel.setText("Faults");

        AboutOverTempTBox.setEditable(false);
        AboutOverTempTBox.setText("N/A");

        AboutOverTempLabel.setText("Over Temperature:");

        AboutOverVoltageTBox.setEditable(false);
        AboutOverVoltageTBox.setText("N/A");

        AboutOverVoltageLabel.setText("Over Voltage:");

        AboutUnderVoltageTBox.setEditable(false);
        AboutUnderVoltageTBox.setText("N/A");

        AboutUnderVoltageLabel.setText("Under Voltage:");

        AboutOverCurrentTBox.setEditable(false);
        AboutOverCurrentTBox.setText("N/A");

        AboutOverCurrentLabel.setText("Over Current:");

        AboutUnderCurrentTBox.setEditable(false);
        AboutUnderCurrentTBox.setText("N/A");

        AboutUnderCurrentLabel.setText("Under Current:");

        AboutStatusesLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AboutStatusesLabel.setText("Statuses");

        AboutHighVoltageLabel.setText("High-Voltage On/Off:");

        AboutHighVoltageTBox.setEditable(false);
        AboutHighVoltageTBox.setText("N/A");

        AboutInterlockLabel.setText("Interlock:");

        AboutInterlockTBox.setEditable(false);
        AboutInterlockTBox.setText("N/A");

        AboutFaultLabel.setText("Fault:");

        AboutFaultTBox.setEditable(false);
        AboutFaultTBox.setText("N/A");

        AboutRemoteLocalLabel.setText("Remote/Local:");

        AboutRemoteLocalTBox.setEditable(false);
        AboutRemoteLocalTBox.setText("N/A");

        AboutMaxKVLabel.setText("Max KV:");

        AboutMaxKVTBox.setEditable(false);
        AboutMaxKVTBox.setText("N/A");

        AboutMaxMALabel.setText("Max MA:");

        AboutMaxMATBox.setEditable(false);
        AboutMaxMATBox.setText("N/A");

        AboutMaxWLabel.setText("Max W:");

        AboutMaxWTBox.setEditable(false);
        AboutMaxWTBox.setText("N/A");

        javax.swing.GroupLayout AboutPanelLayout = new javax.swing.GroupLayout(AboutPanel);
        AboutPanel.setLayout(AboutPanelLayout);
        AboutPanelLayout.setHorizontalGroup(
            AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AboutPanelLayout.createSequentialGroup()
                        .addComponent(AboutSupplyModelLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AboutSupplyModelTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AboutMaxKVLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AboutMaxKVTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AboutMaxMALabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AboutMaxMATBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AboutMaxWLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AboutMaxWTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(AboutPanelLayout.createSequentialGroup()
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(AboutPanelLayout.createSequentialGroup()
                                    .addComponent(AboutIPAddressLabal)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(AboutIPAddressTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(AboutPanelLayout.createSequentialGroup()
                                    .addComponent(AboutPortLabal)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(AboutPortTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(AboutPanelLayout.createSequentialGroup()
                                    .addComponent(AboutArcLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AboutArcTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(AboutUnderVoltageLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(AboutUnderVoltageTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(AboutPanelLayout.createSequentialGroup()
                                    .addGap(114, 114, 114)
                                    .addComponent(AboutFaultsLabel))
                                .addGroup(AboutPanelLayout.createSequentialGroup()
                                    .addComponent(AboutOverTempLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(AboutOverTempTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(AboutOverCurrentLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(AboutOverCurrentTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(AboutPanelLayout.createSequentialGroup()
                                .addComponent(AboutOverVoltageLabel)
                                .addGap(32, 32, 32)
                                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AboutPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(AboutStatusesLabel))
                                    .addGroup(AboutPanelLayout.createSequentialGroup()
                                        .addComponent(AboutOverVoltageTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(AboutUnderCurrentLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AboutUnderCurrentTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutPanelLayout.createSequentialGroup()
                                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AboutPanelLayout.createSequentialGroup()
                                        .addComponent(AboutFaultLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AboutFaultTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AboutPanelLayout.createSequentialGroup()
                                        .addComponent(AboutInterlockLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AboutInterlockTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(174, 174, 174))
                            .addGroup(AboutPanelLayout.createSequentialGroup()
                                .addComponent(AboutRemoteLocalLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AboutRemoteLocalTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AboutPanelLayout.createSequentialGroup()
                                .addComponent(AboutHighVoltageLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AboutHighVoltageTBox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(170, 170, 170)
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AboutRefreshButton)
                            .addComponent(ReconnectToSupplyButton))
                        .addContainerGap())))
        );
        AboutPanelLayout.setVerticalGroup(
            AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AboutIPAddressTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AboutIPAddressLabal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AboutPortTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AboutPortLabal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AboutSupplyModelTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutSupplyModelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(AboutMaxKVLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AboutMaxKVTBox))
                    .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(AboutMaxMALabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AboutMaxMATBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(AboutMaxWLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AboutMaxWTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AboutPanelLayout.createSequentialGroup()
                        .addComponent(AboutFaultsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AboutUnderVoltageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutUnderVoltageTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutArcTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutArcLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AboutOverTempTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutOverTempLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutOverCurrentTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutOverCurrentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AboutOverVoltageTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutOverVoltageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutUnderCurrentTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutUnderCurrentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AboutStatusesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AboutHighVoltageTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutHighVoltageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AboutInterlockTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutInterlockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AboutFaultTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutFaultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(AboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AboutRemoteLocalTBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutRemoteLocalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AboutPanelLayout.createSequentialGroup()
                        .addComponent(AboutRefreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ReconnectToSupplyButton)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("About", AboutPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void update_About_Page(){
        // update all the text fields on the About page
        this.supply.updates();
        AboutIPAddressTBox.setText(this.IPAddress);
        AboutPortTBox.setText(String.valueOf(this.port));
        AboutSupplyModelTBox.setText(this.supply.modelNumber);
        AboutArcTBox.setText(String.valueOf(this.supply.ArcPresent));
        AboutOverTempTBox.setText(String.valueOf(this.supply.OverTemperature));
        AboutOverVoltageTBox.setText(String.valueOf(this.supply.OverVoltage));
        AboutUnderVoltageTBox.setText(String.valueOf(this.supply.UnderVoltage));
        AboutOverCurrentTBox.setText(String.valueOf(this.supply.OverCurrent));
        AboutUnderCurrentTBox.setText(String.valueOf(this.supply.UnderCurrent));
        AboutMaxKVTBox.setText(String.valueOf(this.supply.MaxKV));
        AboutMaxMATBox.setText(String.valueOf(this.supply.MaxMA));
        AboutMaxWTBox.setText(String.valueOf(this.supply.MaxWatt));
        
        if(this.supply.HighVoltageState){
            AboutHighVoltageTBox.setText("ON");
            AboutHighVoltageTBox.setBackground(Color.yellow);
        }else{
            AboutHighVoltageTBox.setText("OFF");
            AboutHighVoltageTBox.setBackground(Color.green);
        }
        
        if(this.supply.InterlockOpen){
            AboutInterlockTBox.setText("OPEN");
            AboutInterlockTBox.setBackground(Color.red);
        }else{
            AboutInterlockTBox.setText("CLOSED");
            AboutInterlockTBox.setBackground(Color.green);
        }
        
        if(this.supply.FaultPresent){
            AboutFaultTBox.setText("PRESENT");
            AboutFaultTBox.setBackground(Color.red);
        }else{
            AboutFaultTBox.setText("NONE");
            AboutFaultTBox.setBackground(Color.white);
        }
        
        if(this.supply.RemoteMode){
            AboutRemoteLocalTBox.setText("REMOTE");
        }
        else{
            AboutRemoteLocalTBox.setText("LOCAL");
        }
        
    }
    
    
    private void StopConditioningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopConditioningButtonActionPerformed
        if(ch.isAlive()){
            ch.Stop_Conditioning();
        }
        //this.AROH.StartReading = false;
        this.XrayOnButton.setEnabled(true);
        this.StartConditioningButton.setEnabled(true);
        this.StartWarmupButton.setEnabled(true);
        
    }//GEN-LAST:event_StopConditioningButtonActionPerformed

    private void StartConditioningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartConditioningButtonActionPerformed
        SaveAll(evt);
        ch = new ConditioningHandler(sh.appsettings, supply,this.ConditioningProgressBar, log, this.TimeRemainingLabel);
        System.out.println("Starting Conditioning");
        ch.start();
        this.XrayOnButton.setEnabled(false);
        this.StartConditioningButton.setEnabled(false);
        this.StartWarmupButton.setEnabled(false);
        this.AROH.StartReading = true;
        
    }//GEN-LAST:event_StartConditioningButtonActionPerformed

    private void ReconnectToSupplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReconnectToSupplyButtonActionPerformed
        this.supply = new DXM(this.IPAddress,this.port);
        
        this.warmup = new Warmup_Handler(this.supply, this.WarmupSelectionButtonGroup, this.WarmUpProgressBar,
                this.WarmVoltageTBox,this.WarmCurrentTBox,this.FillCurrTBox,this.PreHeatTBox, log,this.WarmupXrayStayOnCheckBox.isSelected());
        this.AROH = new AutoReadOutHandler(this.supply, this.VoltageReadoutLabel, 
                this.CurrentReadoutLabel, this.ConditionVoltageReadTBox, 
                this.ConditionCurrentReadTBox, this.ConditionFillamentReadTBox);
        this.AROH.start();
        
        if(this.supply.connected){
        JOptionPane.showMessageDialog(null, "Supply Connected, re-enabling buttons");
        
        this.XrayOnButton.setEnabled(true);
            
        this.StartWarmupButton.setEnabled(true);
            
        this.StartConditioningButton.setEnabled(true);
         this.StopConditioningButton.setEnabled(true);
        
        }else{
        JOptionPane.showMessageDialog(null, "Supply Not Found");
        }
        
    }//GEN-LAST:event_ReconnectToSupplyButtonActionPerformed
    
    private void ColorAllAsApproved(){
        this.FillCurrTBox.setBackground(Color.lightGray);
        this.PreHeatTBox.setBackground(Color.lightGray);
//        this.WarmVoltageTBox.setBackground(Color.lightGray);
//        this.WarmMinVoltageTBox.setBackground(Color.lightGray);
//        this.WarmMinCurrentTBox.setBackground(Color.lightGray);
//        this.WarmCurrentTBox.setBackground(Color.lightGray);
        this.TotalStepCountTBox.setBackground(Color.lightGray);
        this.TimeBetweenStepsTBox.setBackground(Color.lightGray);
        this.StartingKVTBox.setBackground(Color.lightGray);
        this.StartingMATBox.setBackground(Color.lightGray);
        this.TargetKVTBox.setBackground(Color.lightGray);
        this.TargetMATBox.setBackground(Color.lightGray);
        this.NumberOfOnOffCyclesTBox.setBackground(Color.lightGray);
        this.OnOffCycleTimeOnTBox.setBackground(Color.lightGray);
        this.OnOffCycleTimeOffTBox.setBackground(Color.lightGray);
        this.ConcurrentArcsBeforeStopTBox.setBackground(Color.lightGray);
        this.TotalArcsBeforeStopTBox1.setBackground(Color.lightGray);
        this.ArcRecoveryTimeTBox.setBackground(Color.lightGray);
        this.PerformKVRampCheckBox.setBackground(Color.lightGray);
        this.PerformMARampCheckBox.setBackground(Color.lightGray);
        this.PerformKVRerampCheckBox.setBackground(Color.lightGray);
        this.PerformOnOffCyclesCheckBox.setBackground(Color.lightGray);
        this.NumberOfConditioningCyclesTBox.setBackground(Color.lightGray);
    }
    private void LaodDefaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LaodDefaultButtonActionPerformed
        this.sh.Reset_To_Default();
        this.Load_Settings();
        this.sh.SaveSettings();
        this.ColorAllAsApproved();
    }//GEN-LAST:event_LaodDefaultButtonActionPerformed

    private void AboutRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutRefreshButtonActionPerformed
        update_About_Page();
    }//GEN-LAST:event_AboutRefreshButtonActionPerformed

    private void PerformKVRerampCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerformKVRerampCheckBoxActionPerformed
         sh.appsettings.PerformKVReramp = String.valueOf(this.PerformKVRerampCheckBox.isSelected());
         this.sh.SaveSettings();
         this.PerformKVRerampCheckBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_PerformKVRerampCheckBoxActionPerformed

    private void TubeSerialNumberTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TubeSerialNumberTBoxActionPerformed
        this.SerialNumber = this.TubeSerialNumberTBox.getText();
        System.out.println(this.SerialNumber);
        this.TubeSerialNumberTBox.setBackground(Color.lightGray);
        log.LogFileCreation(this.SerialNumber);
        sh.appsettings.TubeSerialNumber = this.SerialNumber;

    }//GEN-LAST:event_TubeSerialNumberTBoxActionPerformed

    private void TubeSerialNumberTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TubeSerialNumberTBoxMouseClicked
        this.TubeSerialNumberTBox.setBackground(Color.white);
    }//GEN-LAST:event_TubeSerialNumberTBoxMouseClicked

    private void WarmMinCurrentTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WarmMinCurrentTBoxActionPerformed
        sh.appsettings.warmupMinMA = this.WarmMinCurrentTBox.getText();
        this.sh.SaveSettings();
        this.WarmMinCurrentTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_WarmMinCurrentTBoxActionPerformed

    private void WarmCurrentTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WarmCurrentTBoxActionPerformed
        sh.appsettings.WarmupMA = this.WarmCurrentTBox.getText();
        this.sh.SaveSettings();
        this.WarmCurrentTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_WarmCurrentTBoxActionPerformed

    private void StopWarmupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopWarmupButtonActionPerformed
        this.warmup.Stop_Warmup();
        if(!this.warmup.isAlive()){
            this.StartWarmupButton.setEnabled(true);
        }
        this.warmup = new Warmup_Handler(this.supply, this.WarmupSelectionButtonGroup, this.WarmUpProgressBar,
            this.WarmVoltageTBox,this.WarmCurrentTBox,this.FillCurrTBox,this.PreHeatTBox, log,this.WarmupXrayStayOnCheckBox.isSelected());
        this.XrayOnButton.setEnabled(true);
        this.StartConditioningButton.setEnabled(true);
    }//GEN-LAST:event_StopWarmupButtonActionPerformed

    private void StartWarmupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartWarmupButtonActionPerformed
        WarmVoltageTBoxActionPerformed(evt);
        WarmMinVoltageTBoxActionPerformed(evt);
        WarmCurrentTBoxActionPerformed(evt);
        WarmMinCurrentTBoxActionPerformed(evt);
        this.StartWarmupButton.setEnabled(false);
        this.RadioButton7min.setActionCommand("7");
        this.RadioButton15min.setActionCommand("15");
        this.warmup.start();
        this.XrayOnButton.setEnabled(false);
        this.StartConditioningButton.setEnabled(false);
        this.AROH.StartReading = true;
    }//GEN-LAST:event_StartWarmupButtonActionPerformed

    private void XrayOnOffPanelPopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XrayOnOffPanelPopButtonActionPerformed
        if(!xrayOnOffPop.isPOP){
            xrayOnOffPop.POP();
        }else
        XrayOnOffPanel.setLocation(xrayOnOffPop.UNPOP());

    }//GEN-LAST:event_XrayOnOffPanelPopButtonActionPerformed

    private void CurrentSetTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrentSetTBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CurrentSetTBoxActionPerformed

    private void XrayOffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XrayOffButtonActionPerformed
        log.Append_To_Log("Manual|| Xrays off");
        this.supply.Xray_Off();
        //this.AROH.StartReading = false;

    }//GEN-LAST:event_XrayOffButtonActionPerformed

    private void XrayOnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XrayOnButtonActionPerformed
        Double voltage = Double.valueOf(this.VoltageSetTBox.getText());
        Double current = Double.valueOf(this.CurrentSetTBox.getText());
        this.supply.Set_Filament_Limit(Double.valueOf(this.FillCurrTBox.getText()));
        this.supply.Set_Filament_Preheat(Double.valueOf(this.PreHeatTBox.getText()));

        log.Append_To_Log(String.format("Manual|| Voltage: %s, Current: %s",voltage,current));
        if(this.supply.Is_Emmitting()){
            this.supply.Set_Voltage(voltage);
            this.supply.Set_Current(current);
        }else{
            this.supply.Set_Voltage(voltage);
            this.supply.Set_Current(current);
            log.Append_To_Log("Manual|| Xrays on");
            this.supply.Xray_On();
        }
        this.AROH.StartReading = true;

    }//GEN-LAST:event_XrayOnButtonActionPerformed

    private void FillCurrTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FillCurrTBoxActionPerformed
        sh.appsettings.FilamentCurrentLimit = this.FillCurrTBox.getText();
        this.sh.SaveSettings();
        this.FillCurrTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_FillCurrTBoxActionPerformed

    private void PreHeatTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreHeatTBoxActionPerformed
        sh.appsettings.FilamentPreHeat = this.PreHeatTBox.getText();
        this.sh.SaveSettings();
        this.PreHeatTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_PreHeatTBoxActionPerformed

    private void WarmVoltageTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WarmVoltageTBoxActionPerformed
        sh.appsettings.WarmupKV = this.WarmVoltageTBox.getText();
        this.sh.SaveSettings();
        this.WarmVoltageTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_WarmVoltageTBoxActionPerformed

    private void WarmMinVoltageTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WarmMinVoltageTBoxActionPerformed
        sh.appsettings.WarmupMinKV = this.WarmMinVoltageTBox.getText();
        this.sh.SaveSettings();
        this.WarmMinVoltageTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_WarmMinVoltageTBoxActionPerformed

    private void TotalStepCountTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalStepCountTBoxActionPerformed
        sh.appsettings.TotalStepCount = this.TotalStepCountTBox.getText();
        this.sh.SaveSettings();
        this.TotalStepCountTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_TotalStepCountTBoxActionPerformed

    private void TimeBetweenStepsTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeBetweenStepsTBoxActionPerformed
        sh.appsettings.TimeBetweenSteps = this.TimeBetweenStepsTBox.getText();
        this.sh.SaveSettings();
        this.TimeBetweenStepsTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_TimeBetweenStepsTBoxActionPerformed

    private void StartingKVTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartingKVTBoxActionPerformed
        sh.appsettings.StartingKV = this.StartingKVTBox.getText();
        this.sh.SaveSettings();
        this.StartingKVTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_StartingKVTBoxActionPerformed

    private void TargetKVTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TargetKVTBoxActionPerformed
        sh.appsettings.TargetKV = this.TargetKVTBox.getText();
        this.sh.SaveSettings();
        this.TargetKVTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_TargetKVTBoxActionPerformed

    private void StartingMATBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartingMATBoxActionPerformed
        sh.appsettings.StartingMA = this.StartingMATBox.getText();
        this.sh.SaveSettings();
        this.StartingMATBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_StartingMATBoxActionPerformed

    private void TargetMATBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TargetMATBoxActionPerformed
        sh.appsettings.TargetMA = this.TargetMATBox.getText();
        this.sh.SaveSettings();
        this.TargetMATBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_TargetMATBoxActionPerformed

    private void NumberOfOnOffCyclesTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberOfOnOffCyclesTBoxActionPerformed
        sh.appsettings.NumberOnOffCycles = this.NumberOfOnOffCyclesTBox.getText();
        this.sh.SaveSettings();
        this.NumberOfOnOffCyclesTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_NumberOfOnOffCyclesTBoxActionPerformed

    private void OnOffCycleTimeOnTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnOffCycleTimeOnTBoxActionPerformed
        sh.appsettings.OnCycleTime = this.OnOffCycleTimeOnTBox.getText();
        this.sh.SaveSettings();
        this.OnOffCycleTimeOnTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_OnOffCycleTimeOnTBoxActionPerformed

    private void OnOffCycleTimeOffTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnOffCycleTimeOffTBoxActionPerformed
        sh.appsettings.OffCycleTime = this.OnOffCycleTimeOffTBox.getText();
        this.sh.SaveSettings();
        this.OnOffCycleTimeOffTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_OnOffCycleTimeOffTBoxActionPerformed

    private void ConcurrentArcsBeforeStopTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConcurrentArcsBeforeStopTBoxActionPerformed
        sh.appsettings.ConcurrentArcsBeforeStop = this.ConcurrentArcsBeforeStopTBox.getText();
        this.sh.SaveSettings();
        this.ConcurrentArcsBeforeStopTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_ConcurrentArcsBeforeStopTBoxActionPerformed

    private void TotalArcsBeforeStopTBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalArcsBeforeStopTBox1ActionPerformed
        sh.appsettings.TotalArcsBeforeStop = this.TotalArcsBeforeStopTBox1.getText();
        this.sh.SaveSettings();
        this.TotalArcsBeforeStopTBox1.setBackground(Color.lightGray);
    }//GEN-LAST:event_TotalArcsBeforeStopTBox1ActionPerformed

    private void ArcRecoveryTimeTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArcRecoveryTimeTBoxActionPerformed
        sh.appsettings.ArcRecoveryTime = this.ArcRecoveryTimeTBox.getText();
        this.sh.SaveSettings();
        this.ArcRecoveryTimeTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_ArcRecoveryTimeTBoxActionPerformed

    private void PerformKVRampCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerformKVRampCheckBoxActionPerformed
        sh.appsettings.PerformKVRamp = String.valueOf(this.PerformKVRampCheckBox.isSelected());
        this.sh.SaveSettings();
        this.PerformKVRampCheckBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_PerformKVRampCheckBoxActionPerformed

    private void PerformMARampCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerformMARampCheckBoxActionPerformed
        sh.appsettings.PerformMARamp = String.valueOf(this.PerformMARampCheckBox.isSelected());
        this.sh.SaveSettings();
        this.PerformMARampCheckBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_PerformMARampCheckBoxActionPerformed

    private void PerformOnOffCyclesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerformOnOffCyclesCheckBoxActionPerformed
        sh.appsettings.PerformOnOffCycles = String.valueOf(this.PerformOnOffCyclesCheckBox.isSelected());
        this.sh.SaveSettings();
        this.PerformOnOffCyclesCheckBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_PerformOnOffCyclesCheckBoxActionPerformed

    private void NumberOfConditioningCyclesTBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberOfConditioningCyclesTBoxActionPerformed
        sh.appsettings.NumberOfConditioningCycles = String.valueOf(this.NumberOfConditioningCyclesTBox.getText());
        this.sh.SaveSettings();
        this.NumberOfConditioningCyclesTBox.setBackground(Color.lightGray);
    }//GEN-LAST:event_NumberOfConditioningCyclesTBoxActionPerformed

    private void TimeBetweenStepsTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TimeBetweenStepsTBoxMouseClicked
        this.TimeBetweenStepsTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_TimeBetweenStepsTBoxMouseClicked

    private void TotalStepCountTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TotalStepCountTBoxMouseClicked
        this.TotalStepCountTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_TotalStepCountTBoxMouseClicked

    private void StartingKVTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartingKVTBoxMouseClicked
        this.StartingKVTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_StartingKVTBoxMouseClicked

    private void TargetKVTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TargetKVTBoxMouseClicked
        this.TargetKVTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_TargetKVTBoxMouseClicked

    private void StartingMATBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartingMATBoxMouseClicked
        this.StartingMATBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_StartingMATBoxMouseClicked

    private void TargetMATBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TargetMATBoxMouseClicked
        this.TargetMATBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_TargetMATBoxMouseClicked

    private void NumberOfOnOffCyclesTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NumberOfOnOffCyclesTBoxMouseClicked
        this.NumberOfOnOffCyclesTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_NumberOfOnOffCyclesTBoxMouseClicked

    private void OnOffCycleTimeOnTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OnOffCycleTimeOnTBoxMouseClicked
        this.OnOffCycleTimeOnTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_OnOffCycleTimeOnTBoxMouseClicked

    private void OnOffCycleTimeOffTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OnOffCycleTimeOffTBoxMouseClicked
        this.OnOffCycleTimeOffTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_OnOffCycleTimeOffTBoxMouseClicked

    private void ConcurrentArcsBeforeStopTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConcurrentArcsBeforeStopTBoxMouseClicked
        this.ConcurrentArcsBeforeStopTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_ConcurrentArcsBeforeStopTBoxMouseClicked

    private void TotalArcsBeforeStopTBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TotalArcsBeforeStopTBox1MouseClicked
        this.TotalArcsBeforeStopTBox1.setBackground(Color.WHITE);
    }//GEN-LAST:event_TotalArcsBeforeStopTBox1MouseClicked

    private void ArcRecoveryTimeTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArcRecoveryTimeTBoxMouseClicked
        this.ArcRecoveryTimeTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_ArcRecoveryTimeTBoxMouseClicked

    private void FillCurrTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FillCurrTBoxMouseClicked
        this.FillCurrTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_FillCurrTBoxMouseClicked

    private void PreHeatTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PreHeatTBoxMouseClicked
        this.PreHeatTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_PreHeatTBoxMouseClicked

    private void NumberOfConditioningCyclesTBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NumberOfConditioningCyclesTBoxMouseClicked
        this.NumberOfConditioningCyclesTBox.setBackground(Color.WHITE);
    }//GEN-LAST:event_NumberOfConditioningCyclesTBoxMouseClicked
    
    public void SaveAll(java.awt.event.ActionEvent evt){
        System.out.println("Saving All");
        WarmVoltageTBoxActionPerformed(evt);
        WarmMinVoltageTBoxActionPerformed(evt);
        WarmCurrentTBoxActionPerformed(evt);
        WarmMinCurrentTBoxActionPerformed(evt);
        
        FillCurrTBoxActionPerformed(evt);
        PreHeatTBoxActionPerformed(evt);
        TotalStepCountTBoxActionPerformed(evt);
        TimeBetweenStepsTBoxActionPerformed(evt);
        StartingKVTBoxActionPerformed(evt);
        StartingMATBoxActionPerformed(evt);
        TargetKVTBoxActionPerformed(evt);
        TargetMATBoxActionPerformed(evt);
        NumberOfOnOffCyclesTBoxActionPerformed(evt);
        OnOffCycleTimeOnTBoxActionPerformed(evt);
        OnOffCycleTimeOffTBoxActionPerformed(evt);
        ConcurrentArcsBeforeStopTBoxActionPerformed(evt);
        TotalArcsBeforeStopTBox1ActionPerformed(evt);
        ArcRecoveryTimeTBoxActionPerformed(evt);
        PerformKVRerampCheckBoxActionPerformed(evt);
        PerformKVRampCheckBoxActionPerformed(evt);
        PerformMARampCheckBoxActionPerformed(evt);
        PerformOnOffCyclesCheckBoxActionPerformed(evt);
        NumberOfConditioningCyclesTBoxActionPerformed(evt);
        this.sh.SaveSettings();
        this.ColorAllAsApproved();
    }
    private void Load_Settings(){
        this.FillCurrTBox.setText(sh.appsettings.FilamentCurrentLimit);
        this.PreHeatTBox.setText(sh.appsettings.FilamentPreHeat);
        this.WarmVoltageTBox.setText(sh.appsettings.WarmupKV);
        this.WarmMinVoltageTBox.setText(sh.appsettings.WarmupMinKV);
        this.WarmMinCurrentTBox.setText(sh.appsettings.warmupMinMA);
        this.WarmCurrentTBox.setText(sh.appsettings.WarmupMA);
        this.TotalStepCountTBox.setText(sh.appsettings.TotalStepCount);
        this.TimeBetweenStepsTBox.setText(sh.appsettings.TimeBetweenSteps);
        this.StartingKVTBox.setText(sh.appsettings.StartingKV);
        this.StartingMATBox.setText(sh.appsettings.StartingMA);
        this.TargetKVTBox.setText(sh.appsettings.TargetKV);
        this.TargetMATBox.setText(sh.appsettings.TargetMA);
        this.NumberOfOnOffCyclesTBox.setText(sh.appsettings.NumberOnOffCycles);
        this.OnOffCycleTimeOnTBox.setText(sh.appsettings.OnCycleTime);
        this.OnOffCycleTimeOffTBox.setText(sh.appsettings.OffCycleTime);
        this.ConcurrentArcsBeforeStopTBox.setText(sh.appsettings.ConcurrentArcsBeforeStop);
        this.TotalArcsBeforeStopTBox1.setText(sh.appsettings.TotalArcsBeforeStop);
        this.ArcRecoveryTimeTBox.setText(sh.appsettings.ArcRecoveryTime);
        this.PerformKVRampCheckBox.setSelected(sh.appsettings.PerformKVRamp.equals("true"));
        this.PerformMARampCheckBox.setSelected(sh.appsettings.PerformMARamp.equals("true"));
        this.PerformKVRerampCheckBox.setSelected(sh.appsettings.PerformKVReramp.equals("true"));
        this.PerformOnOffCyclesCheckBox.setSelected(sh.appsettings.PerformOnOffCycles.equals("true"));
        this.NumberOfConditioningCyclesTBox.setText(sh.appsettings.NumberOfConditioningCycles);
        this.ColorAllAsApproved();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplyScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplyScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplyScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplyScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupplyScreen().setVisible(true);
                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AboutArcLabel;
    private javax.swing.JTextField AboutArcTBox;
    private javax.swing.JLabel AboutFaultLabel;
    private javax.swing.JTextField AboutFaultTBox;
    private javax.swing.JLabel AboutFaultsLabel;
    private javax.swing.JLabel AboutHighVoltageLabel;
    private javax.swing.JTextField AboutHighVoltageTBox;
    private javax.swing.JLabel AboutIPAddressLabal;
    private javax.swing.JTextField AboutIPAddressTBox;
    private javax.swing.JLabel AboutInterlockLabel;
    private javax.swing.JTextField AboutInterlockTBox;
    private javax.swing.JLabel AboutMaxKVLabel;
    private javax.swing.JTextField AboutMaxKVTBox;
    private javax.swing.JLabel AboutMaxMALabel;
    private javax.swing.JTextField AboutMaxMATBox;
    private javax.swing.JLabel AboutMaxWLabel;
    private javax.swing.JTextField AboutMaxWTBox;
    private javax.swing.JLabel AboutOverCurrentLabel;
    private javax.swing.JTextField AboutOverCurrentTBox;
    private javax.swing.JLabel AboutOverTempLabel;
    private javax.swing.JTextField AboutOverTempTBox;
    private javax.swing.JLabel AboutOverVoltageLabel;
    private javax.swing.JTextField AboutOverVoltageTBox;
    private javax.swing.JPanel AboutPanel;
    private javax.swing.JLabel AboutPortLabal;
    private javax.swing.JTextField AboutPortTBox;
    private javax.swing.JButton AboutRefreshButton;
    private javax.swing.JLabel AboutRemoteLocalLabel;
    private javax.swing.JTextField AboutRemoteLocalTBox;
    private javax.swing.JLabel AboutStatusesLabel;
    private javax.swing.JLabel AboutSupplyModelLabel;
    private javax.swing.JTextField AboutSupplyModelTBox;
    private javax.swing.JLabel AboutUnderCurrentLabel;
    private javax.swing.JTextField AboutUnderCurrentTBox;
    private javax.swing.JLabel AboutUnderVoltageLabel;
    private javax.swing.JTextField AboutUnderVoltageTBox;
    private javax.swing.JLabel ArcRecoveryTimeLabel;
    private javax.swing.JTextField ArcRecoveryTimeTBox;
    private javax.swing.JLabel ConcurrentArcsBeforeStopLabel;
    private javax.swing.JTextField ConcurrentArcsBeforeStopTBox;
    private javax.swing.JLabel ConditionCurrentReadLabel;
    private javax.swing.JTextField ConditionCurrentReadTBox;
    private javax.swing.JLabel ConditionFillamentReadLabl;
    private javax.swing.JTextField ConditionFillamentReadTBox;
    private javax.swing.JLabel ConditionVoltageReadLabel;
    private javax.swing.JTextField ConditionVoltageReadTBox;
    private javax.swing.JPanel ConditioningControlPanel;
    private javax.swing.JProgressBar ConditioningProgressBar;
    private javax.swing.JPanel ConditioningSettingsPanel;
    private javax.swing.JLabel CurrentLabel;
    private javax.swing.JLabel CurrentReadoutLabel;
    private javax.swing.JTextField CurrentSetTBox;
    private javax.swing.JLabel FilCurrLabel;
    private javax.swing.JTextField FillCurrTBox;
    private javax.swing.JButton LaodDefaultButton;
    private javax.swing.JPanel ManualControlPanel;
    private javax.swing.JLabel NumberOfConditioningCyclesLabel;
    private javax.swing.JTextField NumberOfConditioningCyclesTBox;
    private javax.swing.JLabel NumberOfOnOffCyclesLabel;
    private javax.swing.JTextField NumberOfOnOffCyclesTBox;
    private javax.swing.JLabel OnOffCycleTimeOffLabel;
    private javax.swing.JTextField OnOffCycleTimeOffTBox;
    private javax.swing.JLabel OnOffCycleTimeOnLabel;
    private javax.swing.JTextField OnOffCycleTimeOnTBox;
    private javax.swing.JCheckBox PerformKVRampCheckBox;
    private javax.swing.JCheckBox PerformKVRerampCheckBox;
    private javax.swing.JCheckBox PerformMARampCheckBox;
    private javax.swing.JCheckBox PerformOnOffCyclesCheckBox;
    private javax.swing.JLabel PreHeatLabel;
    private javax.swing.JTextField PreHeatTBox;
    private javax.swing.JLabel ProgressBarLabel;
    private javax.swing.JRadioButton RadioButton15min;
    private javax.swing.JRadioButton RadioButton7min;
    private javax.swing.JButton ReconnectToSupplyButton;
    private javax.swing.JButton StartConditioningButton;
    private javax.swing.JButton StartWarmupButton;
    private javax.swing.JLabel StartingKVLabel;
    private javax.swing.JTextField StartingKVTBox;
    private javax.swing.JLabel StartingMALabel;
    private javax.swing.JTextField StartingMATBox;
    private javax.swing.JButton StopConditioningButton;
    private javax.swing.JButton StopWarmupButton;
    private javax.swing.JLabel TargetKVLabel;
    private javax.swing.JTextField TargetKVTBox;
    private javax.swing.JLabel TargetMALabel;
    private javax.swing.JTextField TargetMATBox;
    private javax.swing.JLabel TimeBetweenStepsLabel;
    private javax.swing.JTextField TimeBetweenStepsTBox;
    private javax.swing.JLabel TimeRemainingLabel;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JLabel TotalArcsBeforeStopLabel;
    private javax.swing.JTextField TotalArcsBeforeStopTBox1;
    private javax.swing.JLabel TotalStepCountLabel;
    private javax.swing.JTextField TotalStepCountTBox;
    private javax.swing.JPanel TubeConditioningPanel;
    private javax.swing.JLabel TubeSerialNumberLabel;
    private javax.swing.JTextField TubeSerialNumberTBox;
    private javax.swing.JLabel VoltageLabel;
    private javax.swing.JLabel VoltageReadoutLabel;
    private javax.swing.JTextField VoltageSetTBox;
    private javax.swing.JTextField WarmCurrentTBox;
    private javax.swing.JLabel WarmKVLabel;
    private javax.swing.JLabel WarmMALabel;
    private javax.swing.JTextField WarmMinCurrentTBox;
    private javax.swing.JLabel WarmMinKVLabel;
    private javax.swing.JLabel WarmMinMALabel;
    private javax.swing.JTextField WarmMinVoltageTBox;
    private javax.swing.JProgressBar WarmUpProgressBar;
    private javax.swing.JTextField WarmVoltageTBox;
    private javax.swing.JPanel WarmupPanel;
    private javax.swing.ButtonGroup WarmupSelectionButtonGroup;
    private javax.swing.JLabel WarmupTitleLabel;
    private javax.swing.JCheckBox WarmupXrayStayOnCheckBox;
    private javax.swing.JButton XrayOffButton;
    private javax.swing.JButton XrayOnButton;
    private javax.swing.JPanel XrayOnOffPanel;
    private javax.swing.JButton XrayOnOffPanelPopButton;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel kvLabel;
    private javax.swing.JLabel maLabel;
    // End of variables declaration//GEN-END:variables
}
